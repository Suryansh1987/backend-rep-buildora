import Anthropic from '@anthropic-ai/sdk';
import { ModificationResult } from './filemodifier/types';
export declare class UnrestrictedIntelligentFileModifier {
    private anthropic;
    private reactBasePath;
    private redis;
    private sessionId;
    private streamCallback?;
    private scopeAnalyzer;
    private componentGenerationSystem;
    private dependencyManager;
    private fallbackMechanism;
    private astAnalyzer;
    private projectAnalyzer;
    private fullFileProcessor;
    private targetedNodesProcessor;
    private tokenTracker;
    private unrestrictedProcessor;
    constructor(anthropic: Anthropic, reactBasePath: string, sessionId: string, redisUrl?: string);
    initializeSession(): Promise<void>;
    clearSession(): Promise<void>;
    private getProjectFiles;
    private setProjectFiles;
    private updateProjectFile;
    private addModificationChange;
    private getModificationContextualSummary;
    private getMostModifiedFiles;
    buildProjectTree(): Promise<void>;
    setStreamCallback(callback: (message: string) => void): void;
    private streamUpdate;
    private handleComponentAddition;
    private handleFullFileModification;
    private handleTargetedModification;
    processModification(prompt: string, conversationContext?: string, dbSummary?: string, projectSummaryCallback?: (summary: string, prompt: string) => Promise<string | null>): Promise<ModificationResult>;
    private getChangeIcon;
    getRedisStats(): Promise<any>;
    cleanup(): Promise<void>;
    createFileDirectly(filePath: string, content: string): Promise<boolean>;
    updateFileDirectly(filePath: string, content: string): Promise<boolean>;
    createComponentEmergency(prompt: string): Promise<ModificationResult>;
    private generateSimpleComponent;
}
export { UnrestrictedIntelligentFileModifier as StatelessIntelligentFileModifier };
